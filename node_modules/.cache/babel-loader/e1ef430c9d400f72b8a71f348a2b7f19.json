{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiane/pic-gallery/picture-gallery/src/searchPhotos.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport Loading from \"./components/Loading/\";\nimport Photos from \"./Photos\";\nimport PaginationBar from \"./PaginationBar\";\nconst unsplash = new Unsplash({\n  accessKey: \"8f9fbd10d8bb0a7e69dd531aea77d5a0b84152b806286ed7f83f896c1987413b\"\n});\nconst itemsPerPage = 3;\nexport default function SearchPhotos() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [filteredPics, setFilteredPics] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [filters, setFilters] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    if (pics) {\n      setTags([]);\n      const tags = pics.map(pic => {\n        return pic.tags;\n      });\n\n      if (tags) {\n        const titles = tags.map(tag => {\n          return tag.map(tg => {\n            return tg.title;\n          });\n        });\n\n        if (titles) {\n          titles.forEach(title => {\n            title.forEach(tt => {\n              setTags(tags => [...tags, tt]);\n            });\n          });\n        }\n      }\n    }\n  }, [pics]);\n  useEffect(() => {\n    const uniqueTags = tags.filter(function (elem, pos) {\n      return tags.indexOf(elem) === pos;\n    });\n    setFilters(uniqueTags);\n  }, [tags]);\n\n  const handleNextPageCall = () => {\n    const nextEndIndex = (currentPage + 1) * itemsPerPage;\n    setCurrentPage(currentPage + 1);\n\n    if (pics.length < nextEndIndex) {\n      searchPhotos();\n    }\n  };\n\n  const handlePrevPageCall = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const searchPhotos = async () => {\n    setIsLoading(true);\n    setFilteredPics([]); // e.preventDefault();\n\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setIsLoading(false);\n      setPics(json.results);\n    });\n  };\n\n  const handleChangeFilter = e => {\n    const tag = e.target.value;\n    const newPics = pics.filter(pic => {\n      return pic.tags.find(el => el.title === tag);\n    });\n    setFilteredPics(newPics);\n  };\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * itemsPerPage - itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const srcData = filteredPics.length ? filteredPics : pics;\n    return srcData.slice(startIndex, endIndex);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: searchPhotos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"query\",\n    className: \"input\",\n    placeholder: `Try \"dog\" or \"apple\"`,\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), filters && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChangeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, filters.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, option))))), /*#__PURE__*/React.createElement(Photos, {\n    data: getPaginatedData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PaginationBar, {\n    handlePrevPageCall: handlePrevPageCall,\n    currentPage: currentPage,\n    handleNextPageCall: handleNextPageCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/sebastiane/pic-gallery/picture-gallery/src/searchPhotos.js"],"names":["React","useState","useEffect","Unsplash","toJson","Loading","Photos","PaginationBar","unsplash","accessKey","itemsPerPage","SearchPhotos","isLoading","setIsLoading","query","setQuery","pics","setPics","filteredPics","setFilteredPics","tags","setTags","filters","setFilters","currentPage","setCurrentPage","map","pic","titles","tag","tg","title","forEach","tt","uniqueTags","filter","elem","pos","indexOf","handleNextPageCall","nextEndIndex","length","searchPhotos","handlePrevPageCall","search","photos","then","json","results","handleChangeFilter","e","target","value","newPics","find","el","getPaginatedData","startIndex","endIndex","srcData","slice","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport Loading from \"./components/Loading/\";\nimport Photos from \"./Photos\";\nimport PaginationBar from \"./PaginationBar\";\n\nconst unsplash = new Unsplash({\n  accessKey: \"8f9fbd10d8bb0a7e69dd531aea77d5a0b84152b806286ed7f83f896c1987413b\",\n});\n\nconst itemsPerPage = 3;\n\nexport default function SearchPhotos() {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [filteredPics, setFilteredPics] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [filters, setFilters] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    if (pics) {\n      setTags([]);\n      const tags = pics.map((pic) => {\n        return pic.tags;\n      });\n      if (tags) {\n        const titles = tags.map((tag) => {\n          return tag.map((tg) => {\n            return tg.title;\n          });\n        });\n        if (titles) {\n          titles.forEach((title) => {\n            title.forEach((tt) => {\n                setTags(tags => [...tags, tt]);\n            });\n          });\n        }\n      }\n    }\n  }, [pics]);\n\n  useEffect(() => {\n    const uniqueTags = tags.filter(function(elem, pos) {\n        return tags.indexOf(elem) === pos;\n    });\n\n    setFilters(uniqueTags);\n  }, [tags]);\n\n  const handleNextPageCall = () => {\n    const nextEndIndex = (currentPage + 1) * itemsPerPage;\n    setCurrentPage(currentPage + 1);\n\n    if (pics.length < nextEndIndex) {\n      searchPhotos();\n    }\n  };\n\n  const handlePrevPageCall = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  \n  const searchPhotos = async () => {\n    setIsLoading(true);\n    setFilteredPics([]);\n    // e.preventDefault();\n\n    unsplash.search\n      .photos(query)\n      .then(toJson)\n      .then((json) => {\n        setIsLoading(false);\n        setPics(json.results);\n      });\n\n  };\n\n  const handleChangeFilter = (e) => {\n    const tag = e.target.value;\n    const newPics = pics.filter((pic) => { return pic.tags.find((el) => el.title === tag) });\n    \n    setFilteredPics(newPics);\n  }\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * itemsPerPage - itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const srcData = filteredPics.length ? filteredPics : pics;\n\n    return srcData.slice(startIndex, endIndex);\n  };\n  \n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <form className=\"form\" onSubmit={searchPhotos}>\n            <button type=\"submit\" className=\"button\">\n              Search\n            </button>\n            <input\n              type=\"text\"\n              name=\"query\"\n              className=\"input\"\n              placeholder={`Try \"dog\" or \"apple\"`}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n\n            {filters &&\n              <>\n                <span>Tags</span>\n                <select onChange={handleChangeFilter}>\n                  {filters.map((option) => (\n                    <option key={option} value={option}>{option}</option>\n                  ))}\n                </select>\n              </>\n            }\n          \n          </form>\n            <Photos data={getPaginatedData()} />\n          <PaginationBar\n            handlePrevPageCall={handlePrevPageCall}\n            currentPage={currentPage}\n            handleNextPageCall={handleNextPageCall}\n          />\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}