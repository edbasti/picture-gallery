{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiane/pic-gallery/picture-gallery/src/searchPhotos.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport Loading from \"./components/Loading/\";\nimport Photos from \"./Photos\";\nconst unsplash = new Unsplash({\n  accessKey: \"8f9fbd10d8bb0a7e69dd531aea77d5a0b84152b806286ed7f83f896c1987413b\"\n});\nexport default function SearchPhotos() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [filteredPics, setFilteredPics] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [filters, setFilters] = useState([]);\n  const [targetElement, setTargetElement] = useState(null);\n  const prevY = useRef(0); // storing the last intersection y position\n\n  const options = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 1.0\n  };\n\n  const handleObserver = (entities, observer) => {\n    const y = entities[0].boundingClientRect.y;\n\n    if (prevY.current > y) {\n      searchPhotos();\n    }\n\n    prevY.current = y;\n  };\n\n  const observer = useRef(new IntersectionObserver(handleObserver, options));\n  useEffect(() => {\n    if (targetElement) {\n      observer.current.observe(targetElement);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [targetElement]);\n  useEffect(() => {\n    if (pics) {\n      setTags([]);\n      const tags = pics.map(pic => {\n        return pic.tags;\n      });\n\n      if (tags) {\n        const titles = tags.map(tag => {\n          return tag.map(tg => {\n            return tg.title;\n          });\n        });\n\n        if (titles) {\n          titles.forEach(title => {\n            title.forEach(tt => {\n              setTags(tags => [...tags, tt]);\n            });\n          });\n        }\n      }\n    }\n  }, [pics]);\n  useEffect(() => {\n    const uniqueTags = tags.filter(function (elem, pos) {\n      return tags.indexOf(elem) === pos;\n    });\n    setFilters(uniqueTags);\n  }, [tags]);\n\n  const searchPhotos = async e => {\n    setIsLoading(true);\n    setFilteredPics([]);\n    e.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setIsLoading(false);\n      setPics(json.results);\n    });\n  };\n\n  const handleChangeFilter = e => {\n    const tag = e.target.value;\n    const newPics = pics.filter(pic => {\n      return pic.tags.find(el => el.title === tag);\n    });\n    setFilteredPics(newPics);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: searchPhotos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"query\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \" \", \"\\uD83D\\uDCF7\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"query\",\n    className: \"input\",\n    placeholder: `Try \"dog\" or \"apple\"`,\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Search\"), filters.length && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Filter by Tags\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChangeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, filters.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, option))))), /*#__PURE__*/React.createElement(Photos, {\n    data: filteredPics.length ? filteredPics : pics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-new-images-container\",\n    style: isLoading ? {\n      display: \"none\"\n    } : null,\n    ref: setTargetElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-new-images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"Loading New Images ...\"))));\n}","map":{"version":3,"sources":["/Users/sebastiane/pic-gallery/picture-gallery/src/searchPhotos.js"],"names":["React","useState","useEffect","useRef","Unsplash","toJson","Loading","Photos","unsplash","accessKey","SearchPhotos","isLoading","setIsLoading","query","setQuery","pics","setPics","filteredPics","setFilteredPics","tags","setTags","filters","setFilters","targetElement","setTargetElement","prevY","options","root","rootMargin","threshold","handleObserver","entities","observer","y","boundingClientRect","current","searchPhotos","IntersectionObserver","observe","map","pic","titles","tag","tg","title","forEach","tt","uniqueTags","filter","elem","pos","indexOf","e","preventDefault","search","photos","then","json","results","handleChangeFilter","target","value","newPics","find","el","length","option","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport Loading from \"./components/Loading/\";\nimport Photos from \"./Photos\";\n\nconst unsplash = new Unsplash({\n  accessKey: \"8f9fbd10d8bb0a7e69dd531aea77d5a0b84152b806286ed7f83f896c1987413b\",\n});\nexport default function SearchPhotos() {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [filteredPics, setFilteredPics] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [filters, setFilters] = useState([]);\n  const [targetElement, setTargetElement] = useState(null);\n  const prevY = useRef(0); // storing the last intersection y position\n\n  const options = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 1.0,\n  };\n\n  const handleObserver = (entities, observer) => {\n    const y = entities[0].boundingClientRect.y;\n\n    if (prevY.current > y) {\n      searchPhotos();\n    }\n\n    prevY.current = y;\n  };\n\n  const observer = useRef(new IntersectionObserver(handleObserver, options));\n\n  useEffect(() => {\n    if (targetElement) {\n      observer.current.observe(targetElement);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [targetElement]);\n\n  useEffect(() => {\n    if (pics) {\n      setTags([]);\n      const tags = pics.map((pic) => {\n        return pic.tags;\n      });\n      \n      \n      if (tags) {\n        const titles = tags.map((tag) => {\n          return tag.map((tg) => {\n            return tg.title;\n          });\n          \n        });\n        \n        if (titles) {\n          titles.forEach((title) => {\n            title.forEach((tt) => {\n                setTags(tags => [...tags, tt]);\n            });\n          });\n          \n        }\n\n      }\n    }\n  }, [pics]);\n\n  useEffect(() => {\n    const uniqueTags = tags.filter(function(elem, pos) {\n        return tags.indexOf(elem) === pos;\n    });\n\n    setFilters(uniqueTags);\n  }, [tags]);\n  \n  const searchPhotos = async (e) => {\n    setIsLoading(true);\n    setFilteredPics([]);\n    e.preventDefault();\n\n    unsplash.search\n      .photos(query)\n      .then(toJson)\n      .then((json) => {\n        setIsLoading(false);\n        setPics(json.results);\n      });\n\n  };\n\n  const handleChangeFilter = (e) => {\n    const tag = e.target.value;\n    const newPics = pics.filter((pic) => { return pic.tags.find((el) => el.title === tag) });\n    setFilteredPics(newPics);\n  }\n  \n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <form className=\"form\" onSubmit={searchPhotos}>\n            {\" \"}\n            <label className=\"label\" htmlFor=\"query\">\n              {\" \"}\n              📷\n            </label>\n            <input\n              type=\"text\"\n              name=\"query\"\n              className=\"input\"\n              placeholder={`Try \"dog\" or \"apple\"`}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"button\">\n              Search\n            </button>\n            {filters.length &&\n              <>\n                <span>Filter by Tags</span>\n                <select onChange={handleChangeFilter}>\n                  {filters.map((option) => (\n                    <option key={option} value={option}>{option}</option>\n                  ))}\n                </select>\n              </>\n            }\n          \n          </form>\n\n            <Photos data={filteredPics.length ? filteredPics : pics} />\n            <div\n                className={\"loading-new-images-container\"}\n                style={isLoading ? { display: \"none\" } : null}\n                ref={setTargetElement}\n              >\n                <div className=\"loading-new-images\">Loading New Images ...</div>\n              </div>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}