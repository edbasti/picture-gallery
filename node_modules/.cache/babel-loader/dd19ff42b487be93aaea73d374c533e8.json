{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiane/pic-gallery/picture-gallery/src/searchPhotos.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport Loading from \"./components/Loading/\";\nimport Photos from \"./Photos\";\nconst unsplash = new Unsplash({\n  accessKey: \"8f9fbd10d8bb0a7e69dd531aea77d5a0b84152b806286ed7f83f896c1987413b\"\n});\n\nconst PaginationBar = ({\n  handlePrevPageCall,\n  currentPage,\n  handleNextPageCall\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"btn-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  onClick: handlePrevPageCall,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, \"Previous Page\"), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"current-page\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, \"Page \", currentPage), /*#__PURE__*/React.createElement(Button, {\n  onClick: handleNextPageCall,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, \"Next Page\"));\n\nexport default function SearchPhotos() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [filteredPics, setFilteredPics] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    if (pics) {\n      setTags([]);\n      const tags = pics.map(pic => {\n        return pic.tags;\n      });\n\n      if (tags) {\n        const titles = tags.map(tag => {\n          return tag.map(tg => {\n            return tg.title;\n          });\n        });\n\n        if (titles) {\n          titles.forEach(title => {\n            title.forEach(tt => {\n              setTags(tags => [...tags, tt]);\n            });\n          });\n        }\n      }\n    }\n  }, [pics]);\n  useEffect(() => {\n    const uniqueTags = tags.filter(function (elem, pos) {\n      return tags.indexOf(elem) === pos;\n    });\n    setFilters(uniqueTags);\n  }, [tags]);\n\n  const searchPhotos = async () => {\n    setIsLoading(true);\n    setFilteredPics([]); // e.preventDefault();\n\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setIsLoading(false);\n      setPics(json.results);\n    });\n  };\n\n  const handleChangeFilter = e => {\n    const tag = e.target.value;\n    const newPics = pics.filter(pic => {\n      return pic.tags.find(el => el.title === tag);\n    });\n    setFilteredPics(newPics);\n  };\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * itemsPerPage - itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    console.log(pics);\n    console.log(endIndex);\n    const srcData = filteredPics.length ? filteredPics : pics;\n    return imageObjects.slice(startIndex, endIndex);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: searchPhotos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"query\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \" \", \"\\uD83D\\uDCF7\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"query\",\n    className: \"input\",\n    placeholder: `Try \"dog\" or \"apple\"`,\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Search\"), filters.length && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Filter by Tags\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChangeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, filters.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, option))))), /*#__PURE__*/React.createElement(PaginationBar, {\n    handlePrevPageCall: handlePrevPageCall,\n    currentPage: currentPage,\n    handleNextPageCall: handleNextPageCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Photos, {\n    data: getPaginatedData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(PaginationBar, {\n    handlePrevPageCall: handlePrevPageCall,\n    currentPage: currentPage,\n    handleNextPageCall: handleNextPageCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/sebastiane/pic-gallery/picture-gallery/src/searchPhotos.js"],"names":["React","useState","useEffect","Unsplash","toJson","Loading","Photos","unsplash","accessKey","PaginationBar","handlePrevPageCall","currentPage","handleNextPageCall","SearchPhotos","isLoading","setIsLoading","query","setQuery","pics","setPics","filteredPics","setFilteredPics","tags","setTags","filters","setFilters","map","pic","titles","tag","tg","title","forEach","tt","uniqueTags","filter","elem","pos","indexOf","searchPhotos","search","photos","then","json","results","handleChangeFilter","e","target","value","newPics","find","el","getPaginatedData","startIndex","itemsPerPage","endIndex","console","log","srcData","length","imageObjects","slice","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport Loading from \"./components/Loading/\";\nimport Photos from \"./Photos\";\n\nconst unsplash = new Unsplash({\n  accessKey: \"8f9fbd10d8bb0a7e69dd531aea77d5a0b84152b806286ed7f83f896c1987413b\",\n});\n\nconst PaginationBar = ({\n  handlePrevPageCall,\n  currentPage,\n  handleNextPageCall,\n}) => (\n  <div className=\"btn-container\">\n    <Button onClick={handlePrevPageCall}>Previous Page</Button>\n    <div className={\"current-page\"}>Page {currentPage}</div>\n    <Button onClick={handleNextPageCall}>Next Page</Button>\n  </div>\n);\n\nexport default function SearchPhotos() {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [filteredPics, setFilteredPics] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    if (pics) {\n      setTags([]);\n      const tags = pics.map((pic) => {\n        return pic.tags;\n      });\n      \n      \n      if (tags) {\n        const titles = tags.map((tag) => {\n          return tag.map((tg) => {\n            return tg.title;\n          });\n          \n        });\n        \n        if (titles) {\n          titles.forEach((title) => {\n            title.forEach((tt) => {\n                setTags(tags => [...tags, tt]);\n            });\n          });\n          \n        }\n\n      }\n    }\n  }, [pics]);\n\n  useEffect(() => {\n    const uniqueTags = tags.filter(function(elem, pos) {\n        return tags.indexOf(elem) === pos;\n    });\n\n    setFilters(uniqueTags);\n  }, [tags]);\n  \n  const searchPhotos = async () => {\n    setIsLoading(true);\n    setFilteredPics([]);\n    // e.preventDefault();\n\n    unsplash.search\n      .photos(query)\n      .then(toJson)\n      .then((json) => {\n        setIsLoading(false);\n        setPics(json.results);\n      });\n\n  };\n\n  const handleChangeFilter = (e) => {\n    const tag = e.target.value;\n    const newPics = pics.filter((pic) => { return pic.tags.find((el) => el.title === tag) });\n    setFilteredPics(newPics);\n  }\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * itemsPerPage - itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n\n    console.log(pics);\n    console.log(endIndex);\n\n    const srcData = filteredPics.length ? filteredPics : pics;\n\n    return imageObjects.slice(startIndex, endIndex);\n  };\n  \n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <form className=\"form\" onSubmit={searchPhotos}>\n            {\" \"}\n            <label className=\"label\" htmlFor=\"query\">\n              {\" \"}\n              📷\n            </label>\n            <input\n              type=\"text\"\n              name=\"query\"\n              className=\"input\"\n              placeholder={`Try \"dog\" or \"apple\"`}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"button\">\n              Search\n            </button>\n            {filters.length &&\n              <>\n                <span>Filter by Tags</span>\n                <select onChange={handleChangeFilter}>\n                  {filters.map((option) => (\n                    <option key={option} value={option}>{option}</option>\n                  ))}\n                </select>\n              </>\n            }\n          \n            </form>\n            <PaginationBar\n                        handlePrevPageCall={handlePrevPageCall}\n                        currentPage={currentPage}\n                        handleNextPageCall={handleNextPageCall}\n                      />\n              <Photos data={getPaginatedData()} />\n            <PaginationBar\n              handlePrevPageCall={handlePrevPageCall}\n              currentPage={currentPage}\n              handleNextPageCall={handleNextPageCall}\n            />\n            \n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}